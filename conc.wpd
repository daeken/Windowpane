<title>Concentric</title>

<fshader conc>
uniform vec2 resolution;
uniform float time;

float f(vec2 p, float t) {
	float a = sqrt(dot(p, p))/tan(t/10.0), c=cos(a), s=sin(a);
	p = vec2(p.x*c-p.y*s, p.y*c+p.x*s);
	p *= cos(sqrt(dot(p,p))) * (pow(t, 1.3) + length(p));
	p = tan(mod(sqrt(p) + 1.0, 0.05) * 10.0);
	p = vec2(p.x*c-p.y*s, p.y*c+p.x*s);
	
	return sin(p.y/p.x) * cos(p.x/p.y/sin(p.x));
}

void main(void)
{
	vec2 p = gl_FragCoord.xy / resolution.xy * 2.0 - 1.0;
	p *= atan(0.1 / dot(p,p)) * sqrt(p.x/p.y) * sqrt(p.y/p.x);
	float v = 0.0, x=1.0;
	for(int i = 0; i < 16; ++i) {
		v += f(p, time-x/10.0) * (x /= 1.9);
	}
	
	gl_FragColor = vec4(v*1.2, v, v*1.3, 1.0);
}
</fshader>

<program>conc</program>
