var <% if errorChecking %> a = alert, <% end %> w, x, b, y, z, g, v<% if drawMulti %>, o<% end %><% if programs.size != 0 %>, <%= programs.keys.join ', ' %><% end %>;
function r() {
	b = document.body;
	z = b.firstChild;
	g = z.getContext('experimental-webgl');
	x = g.ARRAY_BUFFER;
	
	<% if (fshaders.size + vshaders.size) != 0 %>
	<%= fshaders.keys.map{|x| x + ' = s(' + fshaders[x].jsstr + ', 1)||y'}.join ', ' %><%if fshaders.size != 0 %>, <%end%><%= vshaders.keys.map{|x| x + ' = s(' + vshaders[x].jsstr + ', 0)||y'}.join ', ' %>;
	<% end %>
	
	<% programs.each do |p, k| %>
		<% k.each_index do |xi| x = k[xi] %>
			g.attachShader(<% if xi == 0 %> <%= p %> = g.createProgram() <% else %> <%= p %> <% end %>, <%= if fshadersinline.include? x then 's(' + fshadersinline[x].jsstr + ', 1)||y' elsif vshadersinline.include? x then 's(' + vshadersinline[x].jsstr + ', 0)||y' else x end %>);
		<% end %>
		g.linkProgram(<%= p %>)<% if errorChecking %>;
		if(!g.getProgramParameter(<%= p %>, g.LINK_STATUS))
			a("Could not initialise shaders"); <% end %>
		<% end %>
	
	g.bindBuffer(x, v = g.createBuffer());
	g.bufferData(x, new Float32Array([-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1]), g.STATIC_DRAW);
	
	(window.onresize = function() {
		z.width = 1;
		g.viewport(0, 0, (g.viewportWidth = z.width = b.clientWidth), (g.viewportHeight = z.height = b.clientHeight-z.offsetTop))<% if not drawMulti %>;
		d()<% end %>
	})()<% if drawMulti %>;
	d()<% end %>
}

function s(s, t) {
	g.shaderSource(y = g.createShader(t?g.FRAGMENT_SHADER:g.VERTEX_SHADER), s);
	g.compileShader(y)<% if errorChecking %>;
	if(!g.getShaderParameter(y, g.COMPILE_STATUS))
		a(g.getShaderInfoLog(y))
	<% end %>
}

function d() {
	g.useProgram(<%=remap['main'] %>);
	<% if drawMulti %>
	g.uniform1f(g.getUniformLocation(<%=remap['main'] %>, 'time'), (new Date().getTime()-(o=o?o:new Date().getTime())) / 1000);
	<% end %>
	g.uniform2f(g.getUniformLocation(<%=remap['main'] %>, 'resolution'), g.viewportWidth, g.viewportHeight);
	g.bindBuffer(x, v);
	g.vertexAttribPointer(w = g.getAttribLocation(<%=remap['main'] %>, 'p'), 2, g.FLOAT);
	g.drawArrays(g.TRIANGLES, g.enableVertexAttribArray(w), 6)<% if drawMulti %>;
	(webkitRequestAnimationFrame ||
		mozRequestAnimationFrame ||
		function(c) {
			setTimeout(c, 50 / 3);
		})(d, z)
	<% end %>
}
